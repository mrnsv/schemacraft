name: Run Pytest Tests

on:
  push:
    branches: [main]
  pull_request:  # Trigger on pull request events
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest  # Run on Ubuntu virtual machines
    strategy:
      matrix:
        python-version: [3.10, 3.12]  # Test on multiple Python versions
    steps:
      - uses: actions/checkout@v3  # Checkout the repository code
      - name: Use cache for pip dependencies  # Cache dependencies for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Use Python ${{ matrix.python-version }}  # Configure Python version
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies  # Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Replace with your requirements file path
      - name: Format code with black  # Run black for code formatting
        uses: psf/black@stable  # Ensure consistent code style
      - name: Sort imports with isort  # Run isort for import sorting
        uses: isort/isort-action@v1
      - name: Run Pytest with coverage  # Run tests and generate coverage report
        run: |
          pip install coverage
          coverage run -m pytest --cov=your_module  # Replace with your module name
          coverage report -m
      - name: Upload coverage report as artifact  # Upload coverage report for analysis
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/
      # - name: Check test results  # Check test outcome and post comments
      #   run: |
      #    if: ${{ success() }} == false ; then
      #       echo "Tests failed! ‚ùå  Please fix failing tests before merging."
      #       # Add a comment to the pull request with details (replace with actual token)
      #       curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
      #         -d "{\"body\": \"Tests failed on ${{ runner.os }} with Python ${{ matrix.python-version }}. Please check the workflow for details.\"}" \
      #         "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.number }}"
      #     fi
